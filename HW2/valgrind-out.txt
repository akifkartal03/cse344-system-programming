==10433== Memcheck, a memory error detector
==10433== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10433== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==10433== Command: ./processM /home/akif/Desktop/source/example
==10433== Parent PID: 9594
==10433== 
--10433-- 
--10433-- Valgrind options:
--10433--    --leak-check=full
--10433--    --show-leak-kinds=all
--10433--    --track-origins=yes
--10433--    --verbose
--10433--    --log-file=valgrind-out.txt
--10433-- Contents of /proc/version:
--10433--   Linux version 5.4.0-70-generic (buildd@lgw01-amd64-039) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #78~18.04.1-Ubuntu SMP Sat Mar 20 14:10:07 UTC 2021
--10433-- 
--10433-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--10433-- Page sizes: currently 4096, max supported 4096
--10433-- Valgrind library directory: /usr/lib/valgrind
--10433-- Reading syms from /home/akif/Desktop/system-programming/HW2/processM
--10433-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--10433--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--10433--   .. CRC mismatch (computed ac9397f6 wanted d0d82632)
--10433--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--10433--   .. CRC is valid
--10433-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--10433--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--10433--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--10433--    object doesn't have a symbol table
--10433--    object doesn't have a dynamic symbol table
--10433-- Scheduler: using generic scheduler lock implementation.
--10433-- Reading suppressions file: /usr/lib/valgrind/default.supp
==10433== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10433-by-akif-on-???
==10433== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10433-by-akif-on-???
==10433== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10433-by-akif-on-???
==10433== 
==10433== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10433== don't want to do, unless you know exactly what you're doing,
==10433== or are doing some strange experiment):
==10433==   /usr/lib/valgrind/../../bin/vgdb --pid=10433 ...command...
==10433== 
==10433== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10433==   /path/to/gdb ./processM
==10433== and then give GDB the following command
==10433==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10433
==10433== --pid is optional if only one valgrind process is running
==10433== 
--10433-- REDIR: 0x401f320 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--10433-- REDIR: 0x401f100 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--10433-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--10433--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--10433--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--10433--    object doesn't have a symbol table
--10433-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--10433--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--10433--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--10433--    object doesn't have a symbol table
==10433== WARNING: new redirection conflicts with existing -- ignoring it
--10433--     old: 0x0401f320 (strlen              ) R-> (0000.0) 0x580608c1 ???
--10433--     new: 0x0401f320 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--10433-- REDIR: 0x401d390 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--10433-- REDIR: 0x401f860 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--10433-- Reading syms from /lib/x86_64-linux-gnu/libm-2.27.so
--10433--   Considering /lib/x86_64-linux-gnu/libm-2.27.so ..
--10433--   .. CRC mismatch (computed 4cce394c wanted e22acdb4)
--10433--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.27.so ..
--10433--   .. CRC is valid
--10433-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--10433--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--10433--   .. CRC mismatch (computed c2c067b2 wanted d73adc7f)
--10433--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--10433--   .. CRC is valid
--10433-- REDIR: 0x5278ce0 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277db0 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278fc0 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277800 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277de0 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x527a830 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278e50 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278c80 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277d70 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277870 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278db0 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5296160 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277d10 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x52778e0 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5279010 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x52778b0 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5279150 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277e10 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277830 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5277ce0 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5282730 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5279060 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278c50 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5296f20 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x52780c0 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278f90 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5278f60 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x527a860 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x52790b0 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--10433-- REDIR: 0x5368630 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--10434-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==10434== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10434==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10434==    by 0x10A875: main (main.c:124)
==10434==  Address 0x1ffefff638 is on thread 1's stack
==10434==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10434==  Uninitialised value was created by a stack allocation
==10434==    at 0x10A5A7: main (main.c:54)
==10434== 
--10435-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==10435== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10435==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10435==    by 0x10A875: main (main.c:124)
==10435==  Address 0x1ffefff638 is on thread 1's stack
==10435==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10435==  Uninitialised value was created by a stack allocation
==10435==    at 0x10A5A7: main (main.c:54)
==10435== 
--10436-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==10436== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10436==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10436==    by 0x10A875: main (main.c:124)
==10436==  Address 0x1ffefff638 is on thread 1's stack
==10436==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10436==  Uninitialised value was created by a stack allocation
==10436==    at 0x10A5A7: main (main.c:54)
==10436== 
--10437-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==10437== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10437==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10437==    by 0x10A875: main (main.c:124)
==10437==  Address 0x1ffefff638 is on thread 1's stack
==10437==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10437==  Uninitialised value was created by a stack allocation
==10437==    at 0x10A5A7: main (main.c:54)
==10437== 
--10438-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
--10434-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
==10438== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10438==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10438==    by 0x10A875: main (main.c:124)
==10438==  Address 0x1ffefff638 is on thread 1's stack
==10438==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10438==  Uninitialised value was created by a stack allocation
==10438==    at 0x10A5A7: main (main.c:54)
==10438== 
--10434-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
--10440-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==10440== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10440==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10440==    by 0x10A875: main (main.c:124)
==10440==  Address 0x1ffefff638 is on thread 1's stack
==10434== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10434-by-akif-on-???
==10434== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10434-by-akif-on-???
==10434== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10434-by-akif-on-???
==10434== 
==10434== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10434== don't want to do, unless you know exactly what you're doing,
==10434== or are doing some strange experiment):
==10434==   /usr/lib/valgrind/../../bin/vgdb --pid=10434 ...command...
==10434== 
==10434== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10434==   /path/to/gdb ./processM
==10434== and then give GDB the following command
==10434==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10434
==10434== --pid is optional if only one valgrind process is running
==10434== 
==10440==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10440==  Uninitialised value was created by a stack allocation
==10440==    at 0x10A5A7: main (main.c:54)
==10440== 
--10441-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
--10434-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
==10441== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10441==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10441==    by 0x10A875: main (main.c:124)
==10441==  Address 0x1ffefff638 is on thread 1's stack
==10441==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10441==  Uninitialised value was created by a stack allocation
==10441==    at 0x10A5A7: main (main.c:54)
==10441== 
--10434-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10434-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10439-- REDIR: 0x53691c0 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4c365d0 (memset)
==10439== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10439==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10439==    by 0x10A875: main (main.c:124)
==10439==  Address 0x1ffefff638 is on thread 1's stack
==10439==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10439==  Uninitialised value was created by a stack allocation
==10439==    at 0x10A5A7: main (main.c:54)
==10439== 
--10434-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10434-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10434-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10434-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10435-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10435-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10435== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10435-by-akif-on-???
==10435== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10435-by-akif-on-???
==10435== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10435-by-akif-on-???
==10435== 
==10435== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10435== don't want to do, unless you know exactly what you're doing,
==10435== or are doing some strange experiment):
==10435==   /usr/lib/valgrind/../../bin/vgdb --pid=10435 ...command...
==10435== 
==10435== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10435==   /path/to/gdb ./processM
==10435== and then give GDB the following command
==10435==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10435
==10435== --pid is optional if only one valgrind process is running
==10435== 
--10435-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10435-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10435-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10435-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10435-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10435-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10436-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10436-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10436== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10436-by-akif-on-???
==10436== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10436-by-akif-on-???
==10436== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10436-by-akif-on-???
==10436== 
==10436== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10436== don't want to do, unless you know exactly what you're doing,
==10436== or are doing some strange experiment):
==10436==   /usr/lib/valgrind/../../bin/vgdb --pid=10436 ...command...
==10436== 
==10436== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10436==   /path/to/gdb ./processM
==10436== and then give GDB the following command
==10436==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10436
==10436== --pid is optional if only one valgrind process is running
==10436== 
--10436-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10436-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10436-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10436-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10436-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10436-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10437-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10437-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10437== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10437-by-akif-on-???
==10437== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10437-by-akif-on-???
==10437== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10437-by-akif-on-???
==10437== 
==10437== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10437== don't want to do, unless you know exactly what you're doing,
==10437== or are doing some strange experiment):
==10437==   /usr/lib/valgrind/../../bin/vgdb --pid=10437 ...command...
==10437== 
==10437== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10437==   /path/to/gdb ./processM
==10437== and then give GDB the following command
==10437==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10437
==10437== --pid is optional if only one valgrind process is running
==10437== 
--10437-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10437-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10437-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10437-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10437-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10437-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10438-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10438-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10438== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10438-by-akif-on-???
==10438== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10438-by-akif-on-???
==10438== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10438-by-akif-on-???
==10438== 
==10438== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10438== don't want to do, unless you know exactly what you're doing,
==10438== or are doing some strange experiment):
==10438==   /usr/lib/valgrind/../../bin/vgdb --pid=10438 ...command...
==10438== 
==10438== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10438==   /path/to/gdb ./processM
==10438== and then give GDB the following command
==10438==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10438
==10438== --pid is optional if only one valgrind process is running
==10438== 
--10438-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10438-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10438-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10438-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10438-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10438-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10438-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10439-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10439-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10439== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10439-by-akif-on-???
==10439== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10439-by-akif-on-???
==10439== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10439-by-akif-on-???
==10439== 
==10439== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10439== don't want to do, unless you know exactly what you're doing,
==10439== or are doing some strange experiment):
==10439==   /usr/lib/valgrind/../../bin/vgdb --pid=10439 ...command...
==10439== 
==10439== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10439==   /path/to/gdb ./processM
==10439== and then give GDB the following command
==10439==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10439
==10439== --pid is optional if only one valgrind process is running
==10439== 
--10439-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10439-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10439-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10439-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10439-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10439-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10439-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10440-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10440-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10440== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10440-by-akif-on-???
==10440== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10440-by-akif-on-???
==10440== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10440-by-akif-on-???
==10440== 
==10440== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10440== don't want to do, unless you know exactly what you're doing,
==10440== or are doing some strange experiment):
==10440==   /usr/lib/valgrind/../../bin/vgdb --pid=10440 ...command...
==10440== 
==10440== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10440==   /path/to/gdb ./processM
==10440== and then give GDB the following command
==10440==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10440
==10440== --pid is optional if only one valgrind process is running
==10440== 
--10440-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10440-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10440-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10440-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10440-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10440-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10440-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10441-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10441-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
==10441== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10441-by-akif-on-???
==10441== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10441-by-akif-on-???
==10441== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10441-by-akif-on-???
==10441== 
==10441== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10441== don't want to do, unless you know exactly what you're doing,
==10441== or are doing some strange experiment):
==10441==   /usr/lib/valgrind/../../bin/vgdb --pid=10441 ...command...
==10441== 
==10441== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10441==   /path/to/gdb ./processM
==10441== and then give GDB the following command
==10441==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10441
==10441== --pid is optional if only one valgrind process is running
==10441== 
--10441-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10441-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10441-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10441-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10441-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10441-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10433-- REDIR: 0x52740a0 (libc.so.6:calloc) redirected to 0x4c31a70 (calloc)
--10433-- REDIR: 0x5272ca0 (libc.so.6:realloc) redirected to 0x4c31cb0 (realloc)
--10433-- REDIR: 0x5364570 (libc.so.6:__strspn_sse42) redirected to 0x4c37990 (strspn)
--10433-- REDIR: 0x53642e0 (libc.so.6:__strcspn_sse42) redirected to 0x4c378d0 (strcspn)
--10433-- REDIR: 0x5368800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--10433-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10433-- REDIR: 0x52719c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--10433-- REDIR: 0x5368440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--10433-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10433-- REDIR: 0x5368d20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--10435-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10441-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10436-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10436-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
--10435-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
==10436== 
==10436== HEAP SUMMARY:
==10436==     in use at exit: 0 bytes in 0 blocks
==10436==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10436== 
==10436== All heap blocks were freed -- no leaks are possible
==10436== 
==10436== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10436== 
==10436== 1 errors in context 1 of 1:
==10436== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10436==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10436==    by 0x10A875: main (main.c:124)
==10436==  Address 0x1ffefff638 is on thread 1's stack
==10436==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10436==  Uninitialised value was created by a stack allocation
==10436==    at 0x10A5A7: main (main.c:54)
==10436== 
==10436== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10435== 
==10435== HEAP SUMMARY:
==10435==     in use at exit: 0 bytes in 0 blocks
==10435==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10435== 
==10435== All heap blocks were freed -- no leaks are possible
==10435== 
==10435== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10435== 
==10435== 1 errors in context 1 of 1:
==10435== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10435==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10435==    by 0x10A875: main (main.c:124)
==10435==  Address 0x1ffefff638 is on thread 1's stack
==10435==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10435==  Uninitialised value was created by a stack allocation
==10435==    at 0x10A5A7: main (main.c:54)
==10435== 
==10435== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--10438-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10434-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10441-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10439-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
==10434== 
==10434== HEAP SUMMARY:
==10434==     in use at exit: 0 bytes in 0 blocks
==10434==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10434== 
==10434== All heap blocks were freed -- no leaks are possible
==10434== 
==10434== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10434== 
==10434== 1 errors in context 1 of 1:
==10434== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10434==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10434==    by 0x10A875: main (main.c:124)
==10434==  Address 0x1ffefff638 is on thread 1's stack
==10434==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10434==  Uninitialised value was created by a stack allocation
==10434==    at 0x10A5A7: main (main.c:54)
==10434== 
==10434== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
--10440-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10437-- REDIR: 0x52710e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--10437-- REDIR: 0x5368d40 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c366e0 (memmove)
==10438== 
==10438== HEAP SUMMARY:
==10438==     in use at exit: 0 bytes in 0 blocks
==10438==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10438== 
==10438== All heap blocks were freed -- no leaks are possible
==10438== 
==10438== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10438== 
==10438== 1 errors in context 1 of 1:
==10438== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10438==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10438==    by 0x10A875: main (main.c:124)
==10438==  Address 0x1ffefff638 is on thread 1's stack
==10438==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10438==  Uninitialised value was created by a stack allocation
==10438==    at 0x10A5A7: main (main.c:54)
==10438== 
==10438== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10439== 
==10439== HEAP SUMMARY:
==10439==     in use at exit: 0 bytes in 0 blocks
==10439==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10439== 
==10439== All heap blocks were freed -- no leaks are possible
==10439== 
==10439== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10439== 
==10439== 1 errors in context 1 of 1:
==10439== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10439==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10439==    by 0x10A875: main (main.c:124)
==10439==  Address 0x1ffefff638 is on thread 1's stack
==10439==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10439==  Uninitialised value was created by a stack allocation
==10439==    at 0x10A5A7: main (main.c:54)
==10439== 
==10439== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10441== 
==10441== HEAP SUMMARY:
==10441==     in use at exit: 0 bytes in 0 blocks
==10441==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10441== 
==10441== All heap blocks were freed -- no leaks are possible
==10441== 
==10441== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10441== 
==10441== 1 errors in context 1 of 1:
==10441== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10441==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10441==    by 0x10A875: main (main.c:124)
==10441==  Address 0x1ffefff638 is on thread 1's stack
==10441==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10441==  Uninitialised value was created by a stack allocation
==10441==    at 0x10A5A7: main (main.c:54)
==10441== 
==10441== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10440== 
==10440== HEAP SUMMARY:
==10440==     in use at exit: 0 bytes in 0 blocks
==10440==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10440== 
==10440== All heap blocks were freed -- no leaks are possible
==10440== 
==10440== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10440== 
==10440== 1 errors in context 1 of 1:
==10440== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10440==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10440==    by 0x10A875: main (main.c:124)
==10440==  Address 0x1ffefff638 is on thread 1's stack
==10440==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10440==  Uninitialised value was created by a stack allocation
==10440==    at 0x10A5A7: main (main.c:54)
==10440== 
==10440== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10437== 
==10437== HEAP SUMMARY:
==10437==     in use at exit: 0 bytes in 0 blocks
==10437==   total heap usage: 18 allocs, 18 frees, 7,624 bytes allocated
==10437== 
==10437== All heap blocks were freed -- no leaks are possible
==10437== 
==10437== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10437== 
==10437== 1 errors in context 1 of 1:
==10437== Syscall param rt_sigaction(act->sa_mask) points to uninitialised byte(s)
==10437==    at 0x521909D: __libc_sigaction (sigaction.c:62)
==10437==    by 0x10A875: main (main.c:124)
==10437==  Address 0x1ffefff638 is on thread 1's stack
==10437==  in frame #0, created by __libc_sigaction (sigaction.c:47)
==10437==  Uninitialised value was created by a stack allocation
==10437==    at 0x10A5A7: main (main.c:54)
==10437== 
==10437== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==10433== 
==10433== HEAP SUMMARY:
==10433==     in use at exit: 0 bytes in 0 blocks
==10433==   total heap usage: 19 allocs, 19 frees, 8,424 bytes allocated
==10433== 
==10433== All heap blocks were freed -- no leaks are possible
==10433== 
==10433== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10433== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
